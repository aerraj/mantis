/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java-test-fixtures'

ext {

    cliParserVersion = '1.1.1'
    configMagicVersion = '0.11'
    curatorVersion = '2.11.0'
    hdrHistogramVersion = '2.+'
    jodaTimeVersion = '2.+'
    jsonVersion = '20180813'
    mesosVersion = '1.7.2'
    testngVersion = '6.14.+'
}

configurations {
    // Configuration for shading that does not pollutes the runtime classpath.
    shaded {
        transitive = false
    }
//    api.extendsFrom shadow
}

dependencies {

    api project(":mantis-common")

    api "org.skife.config:config-magic:$configMagicVersion"
    api 'com.google.code.findbugs:jsr305:3.0.1' // For Nonnull annotation
    api libraries.flinkRpcApi
    api libraries.flinkCore
    shadow libraries.flinkRpcImpl

    api "org.apache.mesos:mesos:$mesosVersion"
    api "org.json:json:$jsonVersion"
    api "org.hdrhistogram:HdrHistogram:$hdrHistogramVersion"
    api "com.github.spullara.cli-parser:cli-parser:$cliParserVersion"
    api "joda-time:joda-time:$jodaTimeVersion"

    testFixturesImplementation "org.apache.flink:flink-rpc-akka:1.14.2"
    testImplementation libraries.junit4
    testImplementation libraries.mockitoAll
}

shadowJar {
//    include '*flink-rpc-akka*.jar'
    classifier = ''
    configurations = [project.configurations.shaded]
//    from sourceSets.main.allSource

    exclude 'META-INF/LICENSE'
    exclude 'META-INF/licence/*'

    mergeServiceFiles()
}

//shadowJar {
////    project.configurations.testImplementation.canBeResolved = true
//    archiveClassifier.set("tests")
//    from sourceSets.test.output
//    configurations = [project.configurations.testImplementation]
//}

task copyLibs(type: Copy) {
    from(sourceSets.main.runtimeClasspath) {
        rename 'flink-rpc-akka(.*)', 'flink-rpc-akka.jar'
    }
    include '*flink-rpc-akka*.jar'
    into "$buildDir/classes/java/main"
}

jar.enabled = false
copyLibs.dependsOn shadowJar
jar.dependsOn copyLibs
